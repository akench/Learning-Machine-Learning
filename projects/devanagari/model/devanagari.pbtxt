node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16124515235424042
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gen/fc1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "gen/fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "gen/fc1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "gen/fc1/weights/Initializer/truncated_normal/mul"
  input: "gen/fc1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/weights/Assign"
  op: "Assign"
  input: "gen/fc1/weights"
  input: "gen/fc1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/weights/read"
  op: "Identity"
  input: "gen/fc1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "gen/fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "gen/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "gen/fc1/kernel/Regularizer/l2_regularizer/scale"
  input: "gen/fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/biases/Assign"
  op: "Assign"
  input: "gen/fc1/biases"
  input: "gen/fc1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/biases/read"
  op: "Identity"
  input: "gen/fc1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
}
node {
  name: "gen/fc1/MatMul"
  op: "MatMul"
  input: "Placeholder_1"
  input: "gen/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gen/fc1/BiasAdd"
  op: "BiasAdd"
  input: "gen/fc1/MatMul"
  input: "gen/fc1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gen/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000\002\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gen/Reshape"
  op: "Reshape"
  input: "gen/fc1/BiasAdd"
  input: "gen/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/read"
  op: "Identity"
  input: "gen/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gen/Reshape"
  input: "gen/BatchNorm/Const"
  input: "gen/BatchNorm/beta/read"
  input: "gen/BatchNorm/Const_1"
  input: "gen/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gen/BatchNorm/AssignMovingAvg/read"
  input: "gen/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gen/BatchNorm/AssignMovingAvg/Sub"
  input: "gen/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gen/BatchNorm/AssignMovingAvg_1/read"
  input: "gen/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gen/BatchNorm/AssignMovingAvg_1/Sub"
  input: "gen/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gen/LeakyRelu/mul"
  op: "Mul"
  input: "gen/LeakyRelu/alpha"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/LeakyRelu/Maximum"
  op: "Maximum"
  input: "gen/LeakyRelu/mul"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.027386127039790154
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.027386127039790154
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gen/convT1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gen/convT1/weights/Initializer/random_uniform/max"
  input: "gen/convT1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gen/convT1/weights/Initializer/random_uniform/RandomUniform"
  input: "gen/convT1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Initializer/random_uniform"
  op: "Add"
  input: "gen/convT1/weights/Initializer/random_uniform/mul"
  input: "gen/convT1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/weights/Assign"
  op: "Assign"
  input: "gen/convT1/weights"
  input: "gen/convT1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/weights/read"
  op: "Identity"
  input: "gen/convT1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/biases/Assign"
  op: "Assign"
  input: "gen/convT1/biases"
  input: "gen/convT1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/biases/read"
  op: "Identity"
  input: "gen/convT1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
}
node {
  name: "gen/convT1/Shape"
  op: "Shape"
  input: "gen/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice"
  op: "StridedSlice"
  input: "gen/convT1/Shape"
  input: "gen/convT1/strided_slice/stack"
  input: "gen/convT1/strided_slice/stack_1"
  input: "gen/convT1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_1"
  op: "StridedSlice"
  input: "gen/convT1/Shape"
  input: "gen/convT1/strided_slice_1/stack"
  input: "gen/convT1/strided_slice_1/stack_1"
  input: "gen/convT1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT1/strided_slice_2"
  op: "StridedSlice"
  input: "gen/convT1/Shape"
  input: "gen/convT1/strided_slice_2/stack"
  input: "gen/convT1/strided_slice_2/stack_1"
  input: "gen/convT1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT1/mul"
  op: "Mul"
  input: "gen/convT1/strided_slice_1"
  input: "gen/convT1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT1/mul_1"
  op: "Mul"
  input: "gen/convT1/strided_slice_2"
  input: "gen/convT1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT1/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gen/convT1/stack"
  op: "Pack"
  input: "gen/convT1/strided_slice"
  input: "gen/convT1/mul"
  input: "gen/convT1/mul_1"
  input: "gen/convT1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gen/convT1/stack"
  input: "gen/convT1/weights/read"
  input: "gen/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/BiasAdd"
  op: "BiasAdd"
  input: "gen/convT1/conv2d_transpose"
  input: "gen/convT1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gen/convT1/Relu"
  op: "Relu"
  input: "gen/convT1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gen/convT1/Relu"
  input: "gen/BatchNorm_1/Const"
  input: "gen/BatchNorm_1/beta/read"
  input: "gen/BatchNorm_1/Const_1"
  input: "gen/BatchNorm_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gen/BatchNorm_1/AssignMovingAvg/read"
  input: "gen/BatchNorm_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gen/BatchNorm_1/AssignMovingAvg/Sub"
  input: "gen/BatchNorm_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/read"
  input: "gen/BatchNorm_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/Sub"
  input: "gen/BatchNorm_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gen/LeakyRelu_1/mul"
  op: "Mul"
  input: "gen/LeakyRelu_1/alpha"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "gen/LeakyRelu_1/mul"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09128709137439728
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09128709137439728
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gen/convT2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gen/convT2/weights/Initializer/random_uniform/max"
  input: "gen/convT2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gen/convT2/weights/Initializer/random_uniform/RandomUniform"
  input: "gen/convT2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Initializer/random_uniform"
  op: "Add"
  input: "gen/convT2/weights/Initializer/random_uniform/mul"
  input: "gen/convT2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/weights/Assign"
  op: "Assign"
  input: "gen/convT2/weights"
  input: "gen/convT2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/weights/read"
  op: "Identity"
  input: "gen/convT2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/biases/Assign"
  op: "Assign"
  input: "gen/convT2/biases"
  input: "gen/convT2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/biases/read"
  op: "Identity"
  input: "gen/convT2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
}
node {
  name: "gen/convT2/Shape"
  op: "Shape"
  input: "gen/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice"
  op: "StridedSlice"
  input: "gen/convT2/Shape"
  input: "gen/convT2/strided_slice/stack"
  input: "gen/convT2/strided_slice/stack_1"
  input: "gen/convT2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_1"
  op: "StridedSlice"
  input: "gen/convT2/Shape"
  input: "gen/convT2/strided_slice_1/stack"
  input: "gen/convT2/strided_slice_1/stack_1"
  input: "gen/convT2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT2/strided_slice_2"
  op: "StridedSlice"
  input: "gen/convT2/Shape"
  input: "gen/convT2/strided_slice_2/stack"
  input: "gen/convT2/strided_slice_2/stack_1"
  input: "gen/convT2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT2/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT2/mul"
  op: "Mul"
  input: "gen/convT2/strided_slice_1"
  input: "gen/convT2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT2/mul_1"
  op: "Mul"
  input: "gen/convT2/strided_slice_2"
  input: "gen/convT2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT2/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gen/convT2/stack"
  op: "Pack"
  input: "gen/convT2/strided_slice"
  input: "gen/convT2/mul"
  input: "gen/convT2/mul_1"
  input: "gen/convT2/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT2/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gen/convT2/stack"
  input: "gen/convT2/weights/read"
  input: "gen/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/BiasAdd"
  op: "BiasAdd"
  input: "gen/convT2/conv2d_transpose"
  input: "gen/convT2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gen/convT2/Relu"
  op: "Relu"
  input: "gen/convT2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gen/convT2/Relu"
  input: "gen/BatchNorm_2/Const"
  input: "gen/BatchNorm_2/beta/read"
  input: "gen/BatchNorm_2/Const_1"
  input: "gen/BatchNorm_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gen/BatchNorm_2/AssignMovingAvg/read"
  input: "gen/BatchNorm_2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gen/BatchNorm_2/AssignMovingAvg/Sub"
  input: "gen/BatchNorm_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/read"
  input: "gen/BatchNorm_2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/Sub"
  input: "gen/BatchNorm_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/LeakyRelu_2/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gen/LeakyRelu_2/mul"
  op: "Mul"
  input: "gen/LeakyRelu_2/alpha"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/LeakyRelu_2/Maximum"
  op: "Maximum"
  input: "gen/LeakyRelu_2/mul"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14852213859558105
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14852213859558105
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gen/convT3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gen/convT3/weights/Initializer/random_uniform/max"
  input: "gen/convT3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gen/convT3/weights/Initializer/random_uniform/RandomUniform"
  input: "gen/convT3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Initializer/random_uniform"
  op: "Add"
  input: "gen/convT3/weights/Initializer/random_uniform/mul"
  input: "gen/convT3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/weights/Assign"
  op: "Assign"
  input: "gen/convT3/weights"
  input: "gen/convT3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/weights/read"
  op: "Identity"
  input: "gen/convT3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/biases/Assign"
  op: "Assign"
  input: "gen/convT3/biases"
  input: "gen/convT3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/biases/read"
  op: "Identity"
  input: "gen/convT3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
}
node {
  name: "gen/convT3/Shape"
  op: "Shape"
  input: "gen/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice"
  op: "StridedSlice"
  input: "gen/convT3/Shape"
  input: "gen/convT3/strided_slice/stack"
  input: "gen/convT3/strided_slice/stack_1"
  input: "gen/convT3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_1"
  op: "StridedSlice"
  input: "gen/convT3/Shape"
  input: "gen/convT3/strided_slice_1/stack"
  input: "gen/convT3/strided_slice_1/stack_1"
  input: "gen/convT3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/strided_slice_2"
  op: "StridedSlice"
  input: "gen/convT3/Shape"
  input: "gen/convT3/strided_slice_2/stack"
  input: "gen/convT3/strided_slice_2/stack_1"
  input: "gen/convT3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gen/convT3/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gen/convT3/mul"
  op: "Mul"
  input: "gen/convT3/strided_slice_1"
  input: "gen/convT3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gen/convT3/mul_1"
  op: "Mul"
  input: "gen/convT3/strided_slice_2"
  input: "gen/convT3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/convT3/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gen/convT3/stack"
  op: "Pack"
  input: "gen/convT3/strided_slice"
  input: "gen/convT3/mul"
  input: "gen/convT3/mul_1"
  input: "gen/convT3/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gen/convT3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gen/convT3/stack"
  input: "gen/convT3/weights/read"
  input: "gen/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/BiasAdd"
  op: "BiasAdd"
  input: "gen/convT3/conv2d_transpose"
  input: "gen/convT3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gen/convT3/Relu"
  op: "Relu"
  input: "gen/convT3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_variance"
  input: "gen/BatchNorm_3/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gen/convT3/Relu"
  input: "gen/BatchNorm_3/Const"
  input: "gen/BatchNorm_3/beta/read"
  input: "gen/BatchNorm_3/Const_1"
  input: "gen/BatchNorm_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gen/BatchNorm_3/AssignMovingAvg/read"
  input: "gen/BatchNorm_3/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gen/BatchNorm_3/AssignMovingAvg/Sub"
  input: "gen/BatchNorm_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/read"
  input: "gen/BatchNorm_3/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/Sub"
  input: "gen/BatchNorm_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_3/moving_variance"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/LeakyRelu_3/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gen/LeakyRelu_3/mul"
  op: "Mul"
  input: "gen/LeakyRelu_3/alpha"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/LeakyRelu_3/Maximum"
  op: "Maximum"
  input: "gen/LeakyRelu_3/mul"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/Tanh"
  op: "Tanh"
  input: "gen/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/Reshape"
  op: "Reshape"
  input: "Placeholder"
  input: "disc/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/conv1/weights/Initializer/truncated_normal/mul"
  input: "disc/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/weights/Assign"
  op: "Assign"
  input: "disc/conv1/weights"
  input: "disc/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/weights/read"
  op: "Identity"
  input: "disc/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/biases/Assign"
  op: "Assign"
  input: "disc/conv1/biases"
  input: "disc/conv1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/biases/read"
  op: "Identity"
  input: "disc/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "disc/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv1/Conv2D"
  op: "Conv2D"
  input: "disc/Reshape"
  input: "disc/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/BiasAdd"
  op: "BiasAdd"
  input: "disc/conv1/Conv2D"
  input: "disc/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc/conv1/Relu"
  op: "Relu"
  input: "disc/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc/LeakyRelu/mul"
  op: "Mul"
  input: "disc/LeakyRelu/alpha"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu/Maximum"
  op: "Maximum"
  input: "disc/LeakyRelu/mul"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/pool1/AvgPool"
  op: "AvgPool"
  input: "disc/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.040311288088560104
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/conv2/weights/Initializer/truncated_normal/mul"
  input: "disc/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/weights/Assign"
  op: "Assign"
  input: "disc/conv2/weights"
  input: "disc/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/weights/read"
  op: "Identity"
  input: "disc/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/biases/Assign"
  op: "Assign"
  input: "disc/conv2/biases"
  input: "disc/conv2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/biases/read"
  op: "Identity"
  input: "disc/conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
}
node {
  name: "disc/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv2/Conv2D"
  op: "Conv2D"
  input: "disc/pool1/AvgPool"
  input: "disc/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/BiasAdd"
  op: "BiasAdd"
  input: "disc/conv2/Conv2D"
  input: "disc/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc/conv2/Relu"
  op: "Relu"
  input: "disc/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc/LeakyRelu_1/mul"
  op: "Mul"
  input: "disc/LeakyRelu_1/alpha"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "disc/LeakyRelu_1/mul"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/pool2/AvgPool"
  op: "AvgPool"
  input: "disc/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/conv3/weights/Initializer/truncated_normal/mul"
  input: "disc/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/weights/Assign"
  op: "Assign"
  input: "disc/conv3/weights"
  input: "disc/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/weights/read"
  op: "Identity"
  input: "disc/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/biases/Assign"
  op: "Assign"
  input: "disc/conv3/biases"
  input: "disc/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/biases/read"
  op: "Identity"
  input: "disc/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
}
node {
  name: "disc/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv3/Conv2D"
  op: "Conv2D"
  input: "disc/pool2/AvgPool"
  input: "disc/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/BiasAdd"
  op: "BiasAdd"
  input: "disc/conv3/Conv2D"
  input: "disc/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc/conv3/Relu"
  op: "Relu"
  input: "disc/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_2/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc/LeakyRelu_2/mul"
  op: "Mul"
  input: "disc/LeakyRelu_2/alpha"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_2/Maximum"
  op: "Maximum"
  input: "disc/LeakyRelu_2/mul"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/pool3/AvgPool"
  op: "AvgPool"
  input: "disc/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/conv4/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/conv4/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/conv4/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/conv4/weights/Initializer/truncated_normal/mul"
  input: "disc/conv4/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/weights/Assign"
  op: "Assign"
  input: "disc/conv4/weights"
  input: "disc/conv4/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/weights/read"
  op: "Identity"
  input: "disc/conv4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/conv4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/conv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/conv4/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/conv4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/biases/Assign"
  op: "Assign"
  input: "disc/conv4/biases"
  input: "disc/conv4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/biases/read"
  op: "Identity"
  input: "disc/conv4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
}
node {
  name: "disc/conv4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/conv4/Conv2D"
  op: "Conv2D"
  input: "disc/pool3/AvgPool"
  input: "disc/conv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/BiasAdd"
  op: "BiasAdd"
  input: "disc/conv4/Conv2D"
  input: "disc/conv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc/conv4/Relu"
  op: "Relu"
  input: "disc/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_3/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc/LeakyRelu_3/mul"
  op: "Mul"
  input: "disc/LeakyRelu_3/alpha"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/LeakyRelu_3/Maximum"
  op: "Maximum"
  input: "disc/LeakyRelu_3/mul"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/pool4/AvgPool"
  op: "AvgPool"
  input: "disc/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc/flatten5/flatten/Shape"
  op: "Shape"
  input: "disc/pool4/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc/flatten5/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "disc/flatten5/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "disc/flatten5/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "disc/flatten5/flatten/strided_slice"
  op: "StridedSlice"
  input: "disc/flatten5/flatten/Shape"
  input: "disc/flatten5/flatten/strided_slice/stack"
  input: "disc/flatten5/flatten/strided_slice/stack_1"
  input: "disc/flatten5/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "disc/flatten5/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "disc/flatten5/flatten/Reshape/shape"
  op: "Pack"
  input: "disc/flatten5/flatten/strided_slice"
  input: "disc/flatten5/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/flatten5/flatten/Reshape"
  op: "Reshape"
  input: "disc/pool4/AvgPool"
  input: "disc/flatten5/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/fc6/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/fc6/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/fc6/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/fc6/weights/Initializer/truncated_normal/mul"
  input: "disc/fc6/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/weights/Assign"
  op: "Assign"
  input: "disc/fc6/weights"
  input: "disc/fc6/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/weights/read"
  op: "Identity"
  input: "disc/fc6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/fc6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/fc6/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/fc6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/biases/Assign"
  op: "Assign"
  input: "disc/fc6/biases"
  input: "disc/fc6/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/biases/read"
  op: "Identity"
  input: "disc/fc6/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
}
node {
  name: "disc/fc6/MatMul"
  op: "MatMul"
  input: "disc/flatten5/flatten/Reshape"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "disc/fc6/BiasAdd"
  op: "BiasAdd"
  input: "disc/fc6/MatMul"
  input: "disc/fc6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc/fc6/Relu"
  op: "Relu"
  input: "disc/fc6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "disc/fc7/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "disc/fc7/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "disc/fc7/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Initializer/truncated_normal"
  op: "Add"
  input: "disc/fc7/weights/Initializer/truncated_normal/mul"
  input: "disc/fc7/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/weights/Assign"
  op: "Assign"
  input: "disc/fc7/weights"
  input: "disc/fc7/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/weights/read"
  op: "Identity"
  input: "disc/fc7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "disc/fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "disc/fc7/kernel/Regularizer/l2_regularizer/scale"
  input: "disc/fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/biases/Assign"
  op: "Assign"
  input: "disc/fc7/biases"
  input: "disc/fc7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/biases/read"
  op: "Identity"
  input: "disc/fc7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
}
node {
  name: "disc/fc7/MatMul"
  op: "MatMul"
  input: "disc/fc6/Relu"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "disc/fc7/BiasAdd"
  op: "BiasAdd"
  input: "disc/fc7/MatMul"
  input: "disc/fc7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc_1/Reshape"
  op: "Reshape"
  input: "gen/Tanh"
  input: "disc_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc_1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc_1/conv1/Conv2D"
  op: "Conv2D"
  input: "disc_1/Reshape"
  input: "disc/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc_1/conv1/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/conv1/Conv2D"
  input: "disc/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/conv1/Relu"
  op: "Relu"
  input: "disc_1/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc_1/LeakyRelu/mul"
  op: "Mul"
  input: "disc_1/LeakyRelu/alpha"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu/Maximum"
  op: "Maximum"
  input: "disc_1/LeakyRelu/mul"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/pool1/AvgPool"
  op: "AvgPool"
  input: "disc_1/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc_1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc_1/conv2/Conv2D"
  op: "Conv2D"
  input: "disc_1/pool1/AvgPool"
  input: "disc/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc_1/conv2/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/conv2/Conv2D"
  input: "disc/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/conv2/Relu"
  op: "Relu"
  input: "disc_1/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc_1/LeakyRelu_1/mul"
  op: "Mul"
  input: "disc_1/LeakyRelu_1/alpha"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "disc_1/LeakyRelu_1/mul"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/pool2/AvgPool"
  op: "AvgPool"
  input: "disc_1/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc_1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc_1/conv3/Conv2D"
  op: "Conv2D"
  input: "disc_1/pool2/AvgPool"
  input: "disc/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc_1/conv3/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/conv3/Conv2D"
  input: "disc/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/conv3/Relu"
  op: "Relu"
  input: "disc_1/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_2/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc_1/LeakyRelu_2/mul"
  op: "Mul"
  input: "disc_1/LeakyRelu_2/alpha"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_2/Maximum"
  op: "Maximum"
  input: "disc_1/LeakyRelu_2/mul"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/pool3/AvgPool"
  op: "AvgPool"
  input: "disc_1/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc_1/conv4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "disc_1/conv4/Conv2D"
  op: "Conv2D"
  input: "disc_1/pool3/AvgPool"
  input: "disc/conv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "disc_1/conv4/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/conv4/Conv2D"
  input: "disc/conv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/conv4/Relu"
  op: "Relu"
  input: "disc_1/conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_3/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "disc_1/LeakyRelu_3/mul"
  op: "Mul"
  input: "disc_1/LeakyRelu_3/alpha"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/LeakyRelu_3/Maximum"
  op: "Maximum"
  input: "disc_1/LeakyRelu_3/mul"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/pool4/AvgPool"
  op: "AvgPool"
  input: "disc_1/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/Shape"
  op: "Shape"
  input: "disc_1/pool4/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/strided_slice"
  op: "StridedSlice"
  input: "disc_1/flatten5/flatten/Shape"
  input: "disc_1/flatten5/flatten/strided_slice/stack"
  input: "disc_1/flatten5/flatten/strided_slice/stack_1"
  input: "disc_1/flatten5/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/Reshape/shape"
  op: "Pack"
  input: "disc_1/flatten5/flatten/strided_slice"
  input: "disc_1/flatten5/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "disc_1/flatten5/flatten/Reshape"
  op: "Reshape"
  input: "disc_1/pool4/AvgPool"
  input: "disc_1/flatten5/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "disc_1/fc6/MatMul"
  op: "MatMul"
  input: "disc_1/flatten5/flatten/Reshape"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "disc_1/fc6/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/fc6/MatMul"
  input: "disc/fc6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "disc_1/fc6/Relu"
  op: "Relu"
  input: "disc_1/fc6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "disc_1/fc7/MatMul"
  op: "MatMul"
  input: "disc_1/fc6/Relu"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "disc_1/fc7/BiasAdd"
  op: "BiasAdd"
  input: "disc_1/fc7/MatMul"
  input: "disc/fc7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "d_loss_real/ones_like/Shape"
  op: "Shape"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "d_loss_real/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "d_loss_real/ones_like"
  op: "Fill"
  input: "d_loss_real/ones_like/Shape"
  input: "d_loss_real/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "disc/fc7/BiasAdd"
  input: "d_loss_real/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/Select"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "disc/fc7/BiasAdd"
  input: "d_loss_real/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/Neg"
  op: "Neg"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/Select_1"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "d_loss_real/logistic_loss/Neg"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/mul"
  op: "Mul"
  input: "disc/fc7/BiasAdd"
  input: "d_loss_real/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/sub"
  op: "Sub"
  input: "d_loss_real/logistic_loss/Select"
  input: "d_loss_real/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/Exp"
  op: "Exp"
  input: "d_loss_real/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss/Log1p"
  op: "Log1p"
  input: "d_loss_real/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/logistic_loss"
  op: "Add"
  input: "d_loss_real/logistic_loss/sub"
  input: "d_loss_real/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "d_loss_real/Mean"
  op: "Mean"
  input: "d_loss_real/logistic_loss"
  input: "d_loss_real/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "d_loss_fake/zeros_like"
  op: "ZerosLike"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/fc7/BiasAdd"
  input: "d_loss_fake/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/Select"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "disc_1/fc7/BiasAdd"
  input: "d_loss_fake/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/Neg"
  op: "Neg"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/Select_1"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "d_loss_fake/logistic_loss/Neg"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/mul"
  op: "Mul"
  input: "disc_1/fc7/BiasAdd"
  input: "d_loss_fake/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/sub"
  op: "Sub"
  input: "d_loss_fake/logistic_loss/Select"
  input: "d_loss_fake/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/Exp"
  op: "Exp"
  input: "d_loss_fake/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss/Log1p"
  op: "Log1p"
  input: "d_loss_fake/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/logistic_loss"
  op: "Add"
  input: "d_loss_fake/logistic_loss/sub"
  input: "d_loss_fake/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "d_loss_fake/Mean"
  op: "Mean"
  input: "d_loss_fake/logistic_loss"
  input: "d_loss_fake/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "d_loss/add"
  op: "Add"
  input: "d_loss_fake/Mean"
  input: "d_loss_real/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/ones_like/Shape"
  op: "Shape"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "g_loss/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "g_loss/ones_like"
  op: "Fill"
  input: "g_loss/ones_like/Shape"
  input: "g_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/fc7/BiasAdd"
  input: "g_loss/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/Select"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "disc_1/fc7/BiasAdd"
  input: "g_loss/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/Neg"
  op: "Neg"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/Select_1"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "g_loss/logistic_loss/Neg"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/mul"
  op: "Mul"
  input: "disc_1/fc7/BiasAdd"
  input: "g_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/sub"
  op: "Sub"
  input: "g_loss/logistic_loss/Select"
  input: "g_loss/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/Exp"
  op: "Exp"
  input: "g_loss/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss/Log1p"
  op: "Log1p"
  input: "g_loss/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/logistic_loss"
  op: "Add"
  input: "g_loss/logistic_loss/sub"
  input: "g_loss/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "g_loss/Mean"
  op: "Mean"
  input: "g_loss/logistic_loss"
  input: "g_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "g_loss_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "g_loss_1"
      }
    }
  }
}
node {
  name: "g_loss_1"
  op: "ScalarSummary"
  input: "g_loss_1/tags"
  input: "g_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_loss_1"
      }
    }
  }
}
node {
  name: "d_loss_1"
  op: "ScalarSummary"
  input: "d_loss_1/tags"
  input: "d_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_fake_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_loss_fake_1"
      }
    }
  }
}
node {
  name: "d_loss_fake_1"
  op: "ScalarSummary"
  input: "d_loss_fake_1/tags"
  input: "d_loss_fake/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_loss_real_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_loss_real_1"
      }
    }
  }
}
node {
  name: "d_loss_real_1"
  op: "ScalarSummary"
  input: "d_loss_real_1/tags"
  input: "d_loss_real/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "g_loss_1"
  input: "d_loss_1"
  input: "d_loss_fake_1"
  input: "d_loss_real_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss/add_grad/Shape"
  input: "gradients/d_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Sum"
  op: "Sum"
  input: "gradients/Fill"
  input: "gradients/d_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss/add_grad/Sum"
  input: "gradients/d_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Fill"
  input: "gradients/d_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss/add_grad/Sum_1"
  input: "gradients/d_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss/add_grad/Reshape"
  input: "^gradients/d_loss/add_grad/Reshape_1"
}
node {
  name: "gradients/d_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss/add_grad/Reshape"
  input: "^gradients/d_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss/add_grad/Reshape_1"
  input: "^gradients/d_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss/add_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Shape"
  op: "Shape"
  input: "d_loss_fake/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/d_loss_fake/Mean_grad/Reshape"
  input: "gradients/d_loss_fake/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Shape_1"
  op: "Shape"
  input: "d_loss_fake/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/d_loss_fake/Mean_grad/Shape_1"
  input: "gradients/d_loss_fake/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/d_loss_fake/Mean_grad/Shape_2"
  input: "gradients/d_loss_fake/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/d_loss_fake/Mean_grad/Prod_1"
  input: "gradients/d_loss_fake/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/d_loss_fake/Mean_grad/Prod"
  input: "gradients/d_loss_fake/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/d_loss_fake/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/d_loss_fake/Mean_grad/Tile"
  input: "gradients/d_loss_fake/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss/add_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_real/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Shape"
  op: "Shape"
  input: "d_loss_real/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/d_loss_real/Mean_grad/Reshape"
  input: "gradients/d_loss_real/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Shape_1"
  op: "Shape"
  input: "d_loss_real/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/d_loss_real/Mean_grad/Shape_1"
  input: "gradients/d_loss_real/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/d_loss_real/Mean_grad/Shape_2"
  input: "gradients/d_loss_real/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/d_loss_real/Mean_grad/Prod_1"
  input: "gradients/d_loss_real/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/d_loss_real/Mean_grad/Prod"
  input: "gradients/d_loss_real/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/d_loss_real/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/d_loss_real/Mean_grad/Tile"
  input: "gradients/d_loss_real/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Shape"
  op: "Shape"
  input: "d_loss_fake/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "d_loss_fake/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_fake/logistic_loss_grad/Shape"
  input: "gradients/d_loss_fake/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_fake/Mean_grad/truediv"
  input: "gradients/d_loss_fake/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss_grad/Sum"
  input: "gradients/d_loss_fake/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_fake/Mean_grad/truediv"
  input: "gradients/d_loss_fake/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss_grad/Sum_1"
  input: "gradients/d_loss_fake/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_fake/logistic_loss_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss_grad/Reshape_1"
  input: "^gradients/d_loss_fake/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Shape"
  op: "Shape"
  input: "d_loss_real/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "d_loss_real/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_real/logistic_loss_grad/Shape"
  input: "gradients/d_loss_real/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_real/Mean_grad/truediv"
  input: "gradients/d_loss_real/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss_grad/Sum"
  input: "gradients/d_loss_real/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_real/Mean_grad/truediv"
  input: "gradients/d_loss_real/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss_grad/Sum_1"
  input: "gradients/d_loss_real/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_real/logistic_loss_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss_grad/Reshape_1"
  input: "^gradients/d_loss_real/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "d_loss_fake/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "d_loss_fake/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Sum"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Neg"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_fake/logistic_loss/sub_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/Reshape_1"
  input: "^gradients/d_loss_fake/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients/d_loss_fake/logistic_loss/Log1p_grad/add/x"
  input: "d_loss_fake/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/d_loss_fake/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_fake/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_fake/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "d_loss_real/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "d_loss_real/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Shape"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Sum"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Neg"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_real/logistic_loss/sub_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/Reshape_1"
  input: "^gradients/d_loss_real/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients/d_loss_real/logistic_loss/Log1p_grad/add/x"
  input: "d_loss_real/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/d_loss_real/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_real/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_real/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_fake/logistic_loss/Select_grad/zeros_like"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_fake/logistic_loss/Select_grad/Select"
  input: "^gradients/d_loss_fake/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/Select_grad/Select"
  input: "^gradients/d_loss_fake/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/Select_grad/Select_1"
  input: "^gradients/d_loss_fake/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "d_loss_fake/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "d_loss_fake/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/mul"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Sum"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/fc7/BiasAdd"
  input: "gradients/d_loss_fake/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/mul_1"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Sum_1"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_fake/logistic_loss/mul_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Reshape"
  input: "^gradients/d_loss_fake/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/Reshape_1"
  input: "^gradients/d_loss_fake/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_fake/logistic_loss/Log1p_grad/mul"
  input: "d_loss_fake/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients/d_loss_real/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_real/logistic_loss/Select_grad/zeros_like"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_real/logistic_loss/Select_grad/Select"
  input: "^gradients/d_loss_real/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/Select_grad/Select"
  input: "^gradients/d_loss_real/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/Select_grad/Select_1"
  input: "^gradients/d_loss_real/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "disc/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "d_loss_real/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Shape"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "d_loss_real/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/mul"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Sum"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/mul_1"
  op: "Mul"
  input: "disc/fc7/BiasAdd"
  input: "gradients/d_loss_real/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/mul_1"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Sum_1"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_real/logistic_loss/mul_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Reshape"
  input: "^gradients/d_loss_real/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/Reshape_1"
  input: "^gradients/d_loss_real/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/d_loss_real/logistic_loss/Log1p_grad/mul"
  input: "d_loss_real/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "d_loss_fake/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_fake/logistic_loss/Exp_grad/mul"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "d_loss_fake/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients/d_loss_fake/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_fake/logistic_loss/Select_1_grad/Select"
  input: "^gradients/d_loss_fake/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/Select"
  input: "^gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/ones_like_grad/Sum"
  op: "Sum"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_real/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "d_loss_real/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_real/logistic_loss/Exp_grad/mul"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "d_loss_real/logistic_loss/GreaterEqual"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients/d_loss_real/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/d_loss_real/logistic_loss/Select_1_grad/Select"
  input: "^gradients/d_loss_real/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/Select"
  input: "^gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/d_loss_fake/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/d_loss_real/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/d_loss_fake/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients/d_loss_fake/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_fake/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN"
  input: "^gradients/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN"
  input: "^gradients/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_fake/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/d_loss_real/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients/d_loss_real/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients/d_loss_real/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/d_loss_real/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/disc/fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_1"
  input: "^gradients/disc/fc7/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_1"
  input: "^gradients/disc/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/d_loss_real/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/disc/fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/fc7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc7/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/fc7/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc_1/fc6/Relu"
  input: "gradients/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/fc7/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/fc7/MatMul_grad/MatMul"
  input: "^gradients/disc_1/fc7/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/disc_1/fc7/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/fc7/MatMul_grad/MatMul"
  input: "^gradients/disc_1/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc7/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc7/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/fc7/MatMul_grad/MatMul_1"
  input: "^gradients/disc_1/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc7/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/disc/fc7/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/disc/fc7/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/fc7/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc/fc6/Relu"
  input: "gradients/disc/fc7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/fc7/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/fc7/MatMul_grad/MatMul"
  input: "^gradients/disc/fc7/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/disc/fc7/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/fc7/MatMul_grad/MatMul"
  input: "^gradients/disc/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc7/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/disc/fc7/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/fc7/MatMul_grad/MatMul_1"
  input: "^gradients/disc/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc7/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/disc_1/fc7/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/fc7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/disc_1/fc7/MatMul_grad/tuple/control_dependency"
  input: "disc_1/fc6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/fc6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/disc/fc7/MatMul_grad/tuple/control_dependency"
  input: "disc/fc6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/disc_1/fc7/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/disc/fc7/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc7/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc_1/fc6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/fc6/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/fc6/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/fc6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc/fc6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/fc6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/fc6/Relu_grad/ReluGrad"
  input: "^gradients/disc/fc6/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/fc6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/fc6/Relu_grad/ReluGrad"
  input: "^gradients/disc/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/fc6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/fc6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/fc6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc_1/flatten5/flatten/Reshape"
  input: "gradients/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/fc6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/fc6/MatMul_grad/MatMul"
  input: "^gradients/disc_1/fc6/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/disc_1/fc6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/fc6/MatMul_grad/MatMul"
  input: "^gradients/disc_1/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/disc_1/fc6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/fc6/MatMul_grad/MatMul_1"
  input: "^gradients/disc_1/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/disc/fc6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/disc/fc6/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/fc6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc/flatten5/flatten/Reshape"
  input: "gradients/disc/fc6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/fc6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/fc6/MatMul_grad/MatMul"
  input: "^gradients/disc/fc6/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/disc/fc6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/fc6/MatMul_grad/MatMul"
  input: "^gradients/disc/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc6/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/disc/fc6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/fc6/MatMul_grad/MatMul_1"
  input: "^gradients/disc/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/fc6/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/disc_1/fc6/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/fc6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/flatten5/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "disc_1/pool4/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/flatten5/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/fc6/MatMul_grad/tuple/control_dependency"
  input: "gradients/disc_1/flatten5/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/flatten5/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "disc/pool4/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/flatten5/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/fc6/MatMul_grad/tuple/control_dependency"
  input: "gradients/disc/flatten5/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/disc_1/fc6/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/disc/fc6/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/fc6/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/pool4/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc_1/pool4/AvgPool_grad/Shape"
  input: "gradients/disc_1/flatten5/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/disc/pool4/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/pool4/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc/pool4/AvgPool_grad/Shape"
  input: "gradients/disc/flatten5/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape_2"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_3/mul"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  input: "gradients/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Select"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Select_1"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape_2"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc/LeakyRelu_3/mul"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients/disc/pool4/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/zeros"
  input: "gradients/disc/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Select"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Sum"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Select_1"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_3/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_3/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/mul"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_3/alpha"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/mul_1"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Shape_1"
  op: "Shape"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Shape"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_3/mul_grad/mul"
  input: "gradients/disc/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Sum"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/mul_1"
  op: "Mul"
  input: "disc/LeakyRelu_3/alpha"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_3/mul_grad/mul_1"
  input: "gradients/disc/LeakyRelu_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_3/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_3/mul_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_6"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/disc/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_7"
  input: "disc/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc_1/conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv4/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv4/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc/conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv4/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv4/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool3/AvgPool"
  input: "disc/conv4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc_1/conv4/Conv2D_grad/ShapeN"
  input: "disc/conv4/weights/read"
  input: "gradients/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool3/AvgPool"
  input: "gradients/disc_1/conv4/Conv2D_grad/ShapeN:1"
  input: "gradients/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc/pool3/AvgPool"
  input: "disc/conv4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc/conv4/Conv2D_grad/ShapeN"
  input: "disc/conv4/weights/read"
  input: "gradients/disc/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc/pool3/AvgPool"
  input: "gradients/disc/conv4/Conv2D_grad/ShapeN:1"
  input: "gradients/disc/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc/conv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/disc_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/pool3/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc_1/pool3/AvgPool_grad/Shape"
  input: "gradients/disc_1/conv4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/disc/pool3/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/pool3/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc/pool3/AvgPool_grad/Shape"
  input: "gradients/disc/conv4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/disc_1/conv4/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape_2"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_2/mul"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  input: "gradients/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Select"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Select_1"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape_2"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc/LeakyRelu_2/mul"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients/disc/pool3/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/zeros"
  input: "gradients/disc/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Select"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Sum"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Select_1"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_2/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_2/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/mul"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_2/alpha"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/mul_1"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Shape_1"
  op: "Shape"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Shape"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_2/mul_grad/mul"
  input: "gradients/disc/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Sum"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/mul_1"
  op: "Mul"
  input: "disc/LeakyRelu_2/alpha"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_2/mul_grad/mul_1"
  input: "gradients/disc/LeakyRelu_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_2/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_2/mul_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_10"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/disc/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_11"
  input: "disc/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc_1/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv3/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv3/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv3/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv3/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool2/AvgPool"
  input: "disc/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc_1/conv3/Conv2D_grad/ShapeN"
  input: "disc/conv3/weights/read"
  input: "gradients/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool2/AvgPool"
  input: "gradients/disc_1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc/pool2/AvgPool"
  input: "disc/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc/conv3/Conv2D_grad/ShapeN"
  input: "disc/conv3/weights/read"
  input: "gradients/disc/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc/pool2/AvgPool"
  input: "gradients/disc/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/disc/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/disc_1/conv3/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/pool2/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc_1/pool2/AvgPool_grad/Shape"
  input: "gradients/disc_1/conv3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/disc/pool2/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/pool2/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc/pool2/AvgPool_grad/Shape"
  input: "gradients/disc/conv3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/disc_1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_1/mul"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  input: "gradients/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Select"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Select_1"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc/LeakyRelu_1/mul"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients/disc/pool2/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/zeros"
  input: "gradients/disc/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Select"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Sum"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Select_1"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/mul"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Sum"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_1/alpha"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/mul_1"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Shape"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_1/mul_grad/mul"
  input: "gradients/disc/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Sum"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/mul_1"
  op: "Mul"
  input: "disc/LeakyRelu_1/alpha"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu_1/mul_grad/mul_1"
  input: "gradients/disc/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Sum_1"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_14"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/disc/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_15"
  input: "disc/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc_1/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv2/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv2/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv2/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv2/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool1/AvgPool"
  input: "disc/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc_1/conv2/Conv2D_grad/ShapeN"
  input: "disc/conv2/weights/read"
  input: "gradients/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool1/AvgPool"
  input: "gradients/disc_1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc/pool1/AvgPool"
  input: "disc/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc/conv2/Conv2D_grad/ShapeN"
  input: "disc/conv2/weights/read"
  input: "gradients/disc/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc/pool1/AvgPool"
  input: "gradients/disc/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/disc/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/disc_1/conv2/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/pool1/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc_1/pool1/AvgPool_grad/Shape"
  input: "gradients/disc_1/conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/disc/pool1/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/pool1/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/disc/pool1/AvgPool_grad/Shape"
  input: "gradients/disc/conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/disc_1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape_2"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu/mul"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/zeros"
  input: "gradients/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Select"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Sum"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Select_1"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "disc/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/disc/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Shape_2"
  input: "gradients/disc/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc/LeakyRelu/mul"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Shape"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "gradients/disc/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients/disc/pool1/AvgPool_grad/AvgPoolGrad"
  input: "gradients/disc/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/disc/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients/disc/LeakyRelu/Maximum_grad/zeros"
  input: "gradients/disc/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Select"
  input: "gradients/disc/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Sum"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Select_1"
  input: "gradients/disc/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Sum_1"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients/disc/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Shape"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu/mul_grad/mul"
  input: "gradients/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Sum"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu/alpha"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc_1/LeakyRelu/mul_grad/mul_1"
  input: "gradients/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Sum_1"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/LeakyRelu/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Reshape"
  input: "^gradients/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc_1/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/LeakyRelu/mul_grad/Reshape_1"
  input: "^gradients/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/disc/LeakyRelu/mul_grad/Shape"
  input: "gradients/disc/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/mul"
  op: "Mul"
  input: "gradients/disc/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "gradients/disc/LeakyRelu/mul_grad/mul"
  input: "gradients/disc/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu/mul_grad/Sum"
  input: "gradients/disc/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/mul_1"
  op: "Mul"
  input: "disc/LeakyRelu/alpha"
  input: "gradients/disc/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/disc/LeakyRelu/mul_grad/mul_1"
  input: "gradients/disc/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/disc/LeakyRelu/mul_grad/Sum_1"
  input: "gradients/disc/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/LeakyRelu/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/LeakyRelu/mul_grad/Reshape"
  input: "^gradients/disc/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/disc/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/LeakyRelu/mul_grad/Reshape_1"
  input: "^gradients/disc/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc_1/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_18"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/disc/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/disc/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/disc/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_19"
  input: "disc/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc_1/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv1/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv1/Relu_grad/ReluGrad"
  input: "^gradients/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/disc/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/disc/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv1/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/disc/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv1/Relu_grad/ReluGrad"
  input: "^gradients/disc/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/disc/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/disc/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/Reshape"
  input: "disc/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc_1/conv1/Conv2D_grad/ShapeN"
  input: "disc/conv1/weights/read"
  input: "gradients/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/Reshape"
  input: "gradients/disc_1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc_1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc/Reshape"
  input: "disc/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/disc/conv1/Conv2D_grad/ShapeN"
  input: "disc/conv1/weights/read"
  input: "gradients/disc/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc/Reshape"
  input: "gradients/disc/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/disc/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/disc/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/disc/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/disc/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/disc/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/disc/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/disc/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/disc_1/conv1/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/disc_1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/disc/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/weights/Adam/Assign"
  op: "Assign"
  input: "disc/conv1/weights/Adam"
  input: "disc/conv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/weights/Adam/read"
  op: "Identity"
  input: "disc/conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv1/weights/Adam_1"
  input: "disc/conv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/weights/Adam_1/read"
  op: "Identity"
  input: "disc/conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
}
node {
  name: "disc/conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/biases/Adam/Assign"
  op: "Assign"
  input: "disc/conv1/biases/Adam"
  input: "disc/conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/biases/Adam/read"
  op: "Identity"
  input: "disc/conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "disc/conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv1/biases/Adam_1"
  input: "disc/conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv1/biases/Adam_1/read"
  op: "Identity"
  input: "disc/conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/weights/Adam/Assign"
  op: "Assign"
  input: "disc/conv2/weights/Adam"
  input: "disc/conv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/weights/Adam/read"
  op: "Identity"
  input: "disc/conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv2/weights/Adam_1"
  input: "disc/conv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/weights/Adam_1/read"
  op: "Identity"
  input: "disc/conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
}
node {
  name: "disc/conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/biases/Adam/Assign"
  op: "Assign"
  input: "disc/conv2/biases/Adam"
  input: "disc/conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/biases/Adam/read"
  op: "Identity"
  input: "disc/conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
}
node {
  name: "disc/conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv2/biases/Adam_1"
  input: "disc/conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv2/biases/Adam_1/read"
  op: "Identity"
  input: "disc/conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/weights/Adam/Assign"
  op: "Assign"
  input: "disc/conv3/weights/Adam"
  input: "disc/conv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/weights/Adam/read"
  op: "Identity"
  input: "disc/conv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv3/weights/Adam_1"
  input: "disc/conv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/weights/Adam_1/read"
  op: "Identity"
  input: "disc/conv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
}
node {
  name: "disc/conv3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/biases/Adam/Assign"
  op: "Assign"
  input: "disc/conv3/biases/Adam"
  input: "disc/conv3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/biases/Adam/read"
  op: "Identity"
  input: "disc/conv3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
}
node {
  name: "disc/conv3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv3/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv3/biases/Adam_1"
  input: "disc/conv3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv3/biases/Adam_1/read"
  op: "Identity"
  input: "disc/conv3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/weights/Adam/Assign"
  op: "Assign"
  input: "disc/conv4/weights/Adam"
  input: "disc/conv4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/weights/Adam/read"
  op: "Identity"
  input: "disc/conv4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv4/weights/Adam_1"
  input: "disc/conv4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/weights/Adam_1/read"
  op: "Identity"
  input: "disc/conv4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
}
node {
  name: "disc/conv4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/biases/Adam/Assign"
  op: "Assign"
  input: "disc/conv4/biases/Adam"
  input: "disc/conv4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/biases/Adam/read"
  op: "Identity"
  input: "disc/conv4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
}
node {
  name: "disc/conv4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/conv4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/conv4/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/conv4/biases/Adam_1"
  input: "disc/conv4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/conv4/biases/Adam_1/read"
  op: "Identity"
  input: "disc/conv4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/weights/Adam/Assign"
  op: "Assign"
  input: "disc/fc6/weights/Adam"
  input: "disc/fc6/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/weights/Adam/read"
  op: "Identity"
  input: "disc/fc6/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/fc6/weights/Adam_1"
  input: "disc/fc6/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/weights/Adam_1/read"
  op: "Identity"
  input: "disc/fc6/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
}
node {
  name: "disc/fc6/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/biases/Adam/Assign"
  op: "Assign"
  input: "disc/fc6/biases/Adam"
  input: "disc/fc6/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/biases/Adam/read"
  op: "Identity"
  input: "disc/fc6/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
}
node {
  name: "disc/fc6/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc6/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc6/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/fc6/biases/Adam_1"
  input: "disc/fc6/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc6/biases/Adam_1/read"
  op: "Identity"
  input: "disc/fc6/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/weights/Adam/Assign"
  op: "Assign"
  input: "disc/fc7/weights/Adam"
  input: "disc/fc7/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/weights/Adam/read"
  op: "Identity"
  input: "disc/fc7/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/weights/Adam_1/Assign"
  op: "Assign"
  input: "disc/fc7/weights/Adam_1"
  input: "disc/fc7/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/weights/Adam_1/read"
  op: "Identity"
  input: "disc/fc7/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
}
node {
  name: "disc/fc7/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/biases/Adam/Assign"
  op: "Assign"
  input: "disc/fc7/biases/Adam"
  input: "disc/fc7/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/biases/Adam/read"
  op: "Identity"
  input: "disc/fc7/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
}
node {
  name: "disc/fc7/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "disc/fc7/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "disc/fc7/biases/Adam_1/Assign"
  op: "Assign"
  input: "disc/fc7/biases/Adam_1"
  input: "disc/fc7/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "disc/fc7/biases/Adam_1/read"
  op: "Identity"
  input: "disc/fc7/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_disc/conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv1/weights"
  input: "disc/conv1/weights/Adam"
  input: "disc/conv1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv1/biases"
  input: "disc/conv1/biases/Adam"
  input: "disc/conv1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv2/weights"
  input: "disc/conv2/weights/Adam"
  input: "disc/conv2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv2/biases"
  input: "disc/conv2/biases/Adam"
  input: "disc/conv2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv3/weights"
  input: "disc/conv3/weights/Adam"
  input: "disc/conv3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv3/biases"
  input: "disc/conv3/biases/Adam"
  input: "disc/conv3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv4/weights"
  input: "disc/conv4/weights/Adam"
  input: "disc/conv4/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/conv4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/conv4/biases"
  input: "disc/conv4/biases/Adam"
  input: "disc/conv4/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/fc6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/fc6/weights"
  input: "disc/fc6/weights/Adam"
  input: "disc/fc6/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/fc6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/fc6/biases"
  input: "disc/fc6/biases/Adam"
  input: "disc/fc6/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/fc7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/fc7/weights"
  input: "disc/fc7/weights/Adam"
  input: "disc/fc7/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_disc/fc7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "disc/fc7/biases"
  input: "disc/fc7/biases/Adam"
  input: "disc/fc7/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_disc/conv1/weights/ApplyAdam"
  input: "^Adam/update_disc/conv1/biases/ApplyAdam"
  input: "^Adam/update_disc/conv2/weights/ApplyAdam"
  input: "^Adam/update_disc/conv2/biases/ApplyAdam"
  input: "^Adam/update_disc/conv3/weights/ApplyAdam"
  input: "^Adam/update_disc/conv3/biases/ApplyAdam"
  input: "^Adam/update_disc/conv4/weights/ApplyAdam"
  input: "^Adam/update_disc/conv4/biases/ApplyAdam"
  input: "^Adam/update_disc/fc6/weights/ApplyAdam"
  input: "^Adam/update_disc/fc6/biases/ApplyAdam"
  input: "^Adam/update_disc/fc7/weights/ApplyAdam"
  input: "^Adam/update_disc/fc7/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_disc/conv1/weights/ApplyAdam"
  input: "^Adam/update_disc/conv1/biases/ApplyAdam"
  input: "^Adam/update_disc/conv2/weights/ApplyAdam"
  input: "^Adam/update_disc/conv2/biases/ApplyAdam"
  input: "^Adam/update_disc/conv3/weights/ApplyAdam"
  input: "^Adam/update_disc/conv3/biases/ApplyAdam"
  input: "^Adam/update_disc/conv4/weights/ApplyAdam"
  input: "^Adam/update_disc/conv4/biases/ApplyAdam"
  input: "^Adam/update_disc/fc6/weights/ApplyAdam"
  input: "^Adam/update_disc/fc6/biases/ApplyAdam"
  input: "^Adam/update_disc/fc7/weights/ApplyAdam"
  input: "^Adam/update_disc/fc7/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/update_disc/conv1/weights/ApplyAdam"
  input: "^Adam/update_disc/conv1/biases/ApplyAdam"
  input: "^Adam/update_disc/conv2/weights/ApplyAdam"
  input: "^Adam/update_disc/conv2/biases/ApplyAdam"
  input: "^Adam/update_disc/conv3/weights/ApplyAdam"
  input: "^Adam/update_disc/conv3/biases/ApplyAdam"
  input: "^Adam/update_disc/conv4/weights/ApplyAdam"
  input: "^Adam/update_disc/conv4/biases/ApplyAdam"
  input: "^Adam/update_disc/fc6/weights/ApplyAdam"
  input: "^Adam/update_disc/fc6/biases/ApplyAdam"
  input: "^Adam/update_disc/fc7/weights/ApplyAdam"
  input: "^Adam/update_disc/fc7/biases/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/g_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Shape"
  op: "Shape"
  input: "g_loss/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/g_loss/Mean_grad/Reshape"
  input: "gradients_1/g_loss/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Shape_1"
  op: "Shape"
  input: "g_loss/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Prod"
  op: "Prod"
  input: "gradients_1/g_loss/Mean_grad/Shape_1"
  input: "gradients_1/g_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients_1/g_loss/Mean_grad/Shape_2"
  input: "gradients_1/g_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/g_loss/Mean_grad/Prod_1"
  input: "gradients_1/g_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/g_loss/Mean_grad/Prod"
  input: "gradients_1/g_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/Cast"
  op: "Cast"
  input: "gradients_1/g_loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/g_loss/Mean_grad/Tile"
  input: "gradients_1/g_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Shape"
  op: "Shape"
  input: "g_loss/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "g_loss/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/g_loss/logistic_loss_grad/Shape"
  input: "gradients_1/g_loss/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Sum"
  op: "Sum"
  input: "gradients_1/g_loss/Mean_grad/truediv"
  input: "gradients_1/g_loss/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss_grad/Sum"
  input: "gradients_1/g_loss/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/g_loss/Mean_grad/truediv"
  input: "gradients_1/g_loss/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss_grad/Sum_1"
  input: "gradients_1/g_loss/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/logistic_loss_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss_grad/Reshape_1"
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss_grad/Reshape_1"
  input: "^gradients_1/g_loss/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "g_loss/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "g_loss/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Shape"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Sum"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Neg"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/logistic_loss/sub_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/Reshape_1"
  input: "^gradients_1/g_loss/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients_1/g_loss/logistic_loss/Log1p_grad/add/x"
  input: "g_loss/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients_1/g_loss/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients_1/g_loss/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients_1/g_loss/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "gradients_1/g_loss/logistic_loss/Select_grad/zeros_like"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/logistic_loss/Select_grad/Select"
  input: "^gradients_1/g_loss/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/Select_grad/Select"
  input: "^gradients_1/g_loss/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/Select_grad/Select_1"
  input: "^gradients_1/g_loss/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "disc_1/fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "g_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Shape"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "g_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/mul"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Sum"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/fc7/BiasAdd"
  input: "gradients_1/g_loss/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/mul_1"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Sum_1"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/logistic_loss/mul_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Reshape"
  input: "^gradients_1/g_loss/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/Reshape_1"
  input: "^gradients_1/g_loss/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/g_loss/logistic_loss/Log1p_grad/mul"
  input: "g_loss/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/ones_like_grad/Sum"
  op: "Sum"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/g_loss/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "g_loss/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "gradients_1/g_loss/logistic_loss/Exp_grad/mul"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "g_loss/logistic_loss/GreaterEqual"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients_1/g_loss/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/logistic_loss/Select_1_grad/Select"
  input: "^gradients_1/g_loss/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/Select"
  input: "^gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/g_loss/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients_1/g_loss/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN"
  input: "^gradients_1/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN"
  input: "^gradients_1/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/fc7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc_1/fc6/Relu"
  input: "gradients_1/disc_1/fc7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/fc7/MatMul_grad/MatMul"
  input: "^gradients_1/disc_1/fc7/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/disc_1/fc7/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/fc7/MatMul_grad/MatMul"
  input: "^gradients_1/disc_1/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc7/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc7/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/fc7/MatMul_grad/MatMul_1"
  input: "^gradients_1/disc_1/fc7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc7/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/disc_1/fc7/MatMul_grad/tuple/control_dependency"
  input: "disc_1/fc6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/disc_1/fc6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/fc6/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/fc6/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc6/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/fc6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  input: "disc/fc6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "disc_1/flatten5/flatten/Reshape"
  input: "gradients_1/disc_1/fc6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/fc6/MatMul_grad/MatMul"
  input: "^gradients_1/disc_1/fc6/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/disc_1/fc6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/fc6/MatMul_grad/MatMul"
  input: "^gradients_1/disc_1/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc6/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/fc6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/fc6/MatMul_grad/MatMul_1"
  input: "^gradients_1/disc_1/fc6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/fc6/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/flatten5/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "disc_1/pool4/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/flatten5/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/fc6/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/disc_1/flatten5/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/pool4/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients_1/disc_1/pool4/AvgPool_grad/Shape"
  input: "gradients_1/disc_1/flatten5/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape_2"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_3/mul"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/zeros"
  input: "gradients_1/disc_1/pool4/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Select"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Select_1"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/mul"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_3/alpha"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/mul_1"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/disc_1/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/disc_1/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/AddN_1"
  input: "disc_1/conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/disc_1/conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv4/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv4/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/conv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool3/AvgPool"
  input: "disc/conv4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/disc_1/conv4/Conv2D_grad/ShapeN"
  input: "disc/conv4/weights/read"
  input: "gradients_1/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool3/AvgPool"
  input: "gradients_1/disc_1/conv4/Conv2D_grad/ShapeN:1"
  input: "gradients_1/disc_1/conv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/disc_1/conv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/pool3/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients_1/disc_1/pool3/AvgPool_grad/Shape"
  input: "gradients_1/disc_1/conv4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape_2"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_2/mul"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/zeros"
  input: "gradients_1/disc_1/pool3/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Select"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Select_1"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/mul"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_2/alpha"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/mul_1"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/disc_1/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/disc_1/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/AddN_2"
  input: "disc_1/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/disc_1/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv3/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv3/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool2/AvgPool"
  input: "disc/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/disc_1/conv3/Conv2D_grad/ShapeN"
  input: "disc/conv3/weights/read"
  input: "gradients_1/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool2/AvgPool"
  input: "gradients_1/disc_1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients_1/disc_1/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/disc_1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/pool2/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients_1/disc_1/pool2/AvgPool_grad/Shape"
  input: "gradients_1/disc_1/conv3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu_1/mul"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/zeros"
  input: "gradients_1/disc_1/pool2/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Select"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Select_1"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/mul"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu_1/alpha"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/mul_1"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_3"
  op: "AddN"
  input: "gradients_1/disc_1/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/disc_1/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/AddN_3"
  input: "disc_1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/disc_1/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv2/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv2/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/pool1/AvgPool"
  input: "disc/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/disc_1/conv2/Conv2D_grad/ShapeN"
  input: "disc/conv2/weights/read"
  input: "gradients_1/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/pool1/AvgPool"
  input: "gradients_1/disc_1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients_1/disc_1/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/disc_1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/pool1/AvgPool_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients_1/disc_1/pool1/AvgPool_grad/Shape"
  input: "gradients_1/disc_1/conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "disc_1/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape_2"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "disc_1/LeakyRelu/mul"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/zeros"
  input: "gradients_1/disc_1/pool1/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Select"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Select_1"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/mul"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Sum"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/mul_1"
  op: "Mul"
  input: "disc_1/LeakyRelu/alpha"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/mul_1"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Sum_1"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/LeakyRelu/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Reshape"
  input: "^gradients_1/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/Reshape_1"
  input: "^gradients_1/disc_1/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_4"
  op: "AddN"
  input: "gradients_1/disc_1/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/disc_1/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/AddN_4"
  input: "disc_1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/disc_1/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv1/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv1/Relu_grad/ReluGrad"
  input: "^gradients_1/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/disc_1/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "disc_1/Reshape"
  input: "disc/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/disc_1/conv1/Conv2D_grad/ShapeN"
  input: "disc/conv1/weights/read"
  input: "gradients_1/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "disc_1/Reshape"
  input: "gradients_1/disc_1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients_1/disc_1/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/disc_1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/disc_1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/disc_1/Reshape_grad/Shape"
  op: "Shape"
  input: "gen/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/disc_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/disc_1/conv1/Conv2D_grad/tuple/control_dependency"
  input: "gradients_1/disc_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gen/Tanh"
  input: "gradients_1/disc_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape"
  op: "Shape"
  input: "gen/LeakyRelu_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/gen/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape_2"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gen/LeakyRelu_3/mul"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/Tanh_grad/TanhGrad"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/zeros"
  input: "gradients_1/gen/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Select"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Select_1"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  input: "gen/BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/mul"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/mul_1"
  op: "Mul"
  input: "gen/LeakyRelu_3/alpha"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/mul_1"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_3/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_5"
  op: "AddN"
  input: "gradients_1/gen/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/zeros_like"
  op: "ZerosLike"
  input: "gen/BatchNorm_3/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_1"
  op: "ZerosLike"
  input: "gen/BatchNorm_3/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_2"
  op: "ZerosLike"
  input: "gen/BatchNorm_3/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_3"
  op: "ZerosLike"
  input: "gen/BatchNorm_3/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients_1/AddN_5"
  input: "gen/convT3/Relu"
  input: "gen/BatchNorm_3/Const"
  input: "gen/BatchNorm_3/FusedBatchNorm:3"
  input: "gen/BatchNorm_3/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gen/convT3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/convT3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/gen/convT3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/gen/convT3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT3/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/gen/convT3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT3/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/gen/convT3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/gen/convT3/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/Shape"
  input: "gen/LeakyRelu_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/gen/convT3/BiasAdd_grad/tuple/control_dependency"
  input: "gen/convT3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT3/conv2d_transpose_grad/Conv2D"
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/gen/convT3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT3/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape"
  op: "Shape"
  input: "gen/LeakyRelu_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape_2"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gen/LeakyRelu_2/mul"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/zeros"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Select"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Select_1"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  input: "gen/BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/mul"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/mul_1"
  op: "Mul"
  input: "gen/LeakyRelu_2/alpha"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/mul_1"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_2/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_6"
  op: "AddN"
  input: "gradients_1/gen/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/zeros_like_4"
  op: "ZerosLike"
  input: "gen/BatchNorm_2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_5"
  op: "ZerosLike"
  input: "gen/BatchNorm_2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_6"
  op: "ZerosLike"
  input: "gen/BatchNorm_2/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_7"
  op: "ZerosLike"
  input: "gen/BatchNorm_2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients_1/AddN_6"
  input: "gen/convT2/Relu"
  input: "gen/BatchNorm_2/Const"
  input: "gen/BatchNorm_2/FusedBatchNorm:3"
  input: "gen/BatchNorm_2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gen/convT2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/convT2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/gen/convT2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/gen/convT2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT2/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/gen/convT2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT2/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/gen/convT2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/gen/convT2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/Shape"
  input: "gen/LeakyRelu_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/gen/convT2/BiasAdd_grad/tuple/control_dependency"
  input: "gen/convT2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT2/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT2/conv2d_transpose_grad/Conv2D"
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/gen/convT2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT2/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "gen/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gen/LeakyRelu_1/mul"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/zeros"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Select"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Select_1"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "gen/BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/mul"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Sum"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/mul_1"
  op: "Mul"
  input: "gen/LeakyRelu_1/alpha"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/mul_1"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_7"
  op: "AddN"
  input: "gradients_1/gen/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/zeros_like_8"
  op: "ZerosLike"
  input: "gen/BatchNorm_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_9"
  op: "ZerosLike"
  input: "gen/BatchNorm_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_10"
  op: "ZerosLike"
  input: "gen/BatchNorm_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_11"
  op: "ZerosLike"
  input: "gen/BatchNorm_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients_1/AddN_7"
  input: "gen/convT1/Relu"
  input: "gen/BatchNorm_1/Const"
  input: "gen/BatchNorm_1/FusedBatchNorm:3"
  input: "gen/BatchNorm_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gen/convT1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/convT1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/gen/convT1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/gen/convT1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT1/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/gen/convT1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT1/Relu_grad/ReluGrad"
  input: "^gradients_1/gen/convT1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/gen/convT1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/gen/convT1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/Shape"
  input: "gen/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/gen/convT1/BiasAdd_grad/tuple/control_dependency"
  input: "gen/convT1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/convT1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT1/conv2d_transpose_grad/Conv2D"
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/gen/convT1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/gen/convT1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/convT1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "gen/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape_2"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gen/LeakyRelu/mul"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/zeros"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Select"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Sum"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Select_1"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Shape"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "gen/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu/mul_grad/mul"
  input: "gradients_1/gen/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Sum"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/mul_1"
  op: "Mul"
  input: "gen/LeakyRelu/alpha"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/LeakyRelu/mul_grad/mul_1"
  input: "gradients_1/gen/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Sum_1"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/LeakyRelu/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Reshape"
  input: "^gradients_1/gen/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/LeakyRelu/mul_grad/Reshape_1"
  input: "^gradients_1/gen/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_8"
  op: "AddN"
  input: "gradients_1/gen/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/zeros_like_12"
  op: "ZerosLike"
  input: "gen/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_13"
  op: "ZerosLike"
  input: "gen/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_14"
  op: "ZerosLike"
  input: "gen/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/zeros_like_15"
  op: "ZerosLike"
  input: "gen/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients_1/AddN_8"
  input: "gen/Reshape"
  input: "gen/BatchNorm/Const"
  input: "gen/BatchNorm/FusedBatchNorm:3"
  input: "gen/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/Reshape_grad/Shape"
  op: "Shape"
  input: "gen/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients_1/gen/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/gen/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/gen/fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/Reshape_grad/Reshape"
  input: "^gradients_1/gen/fc1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/gen/fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/Reshape_grad/Reshape"
  input: "^gradients_1/gen/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/fc1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/gen/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients_1/gen/fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gen/fc1/BiasAdd_grad/tuple/control_dependency"
  input: "gen/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gen/fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Placeholder_1"
  input: "gradients_1/gen/fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/fc1/MatMul_grad/MatMul"
  input: "^gradients_1/gen/fc1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gen/fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/fc1/MatMul_grad/MatMul"
  input: "^gradients_1/gen/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/fc1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/gen/fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/fc1/MatMul_grad/MatMul_1"
  input: "^gradients_1/gen/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/fc1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "beta1_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "beta1_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power_1/read"
  op: "Identity"
  input: "beta1_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "beta2_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "Assign"
  input: "beta2_power_1"
  input: "beta2_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power_1/read"
  op: "Identity"
  input: "beta2_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/weights/Adam/Assign"
  op: "Assign"
  input: "gen/fc1/weights/Adam"
  input: "gen/fc1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/weights/Adam/read"
  op: "Identity"
  input: "gen/fc1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/weights/Adam_1/Assign"
  op: "Assign"
  input: "gen/fc1/weights/Adam_1"
  input: "gen/fc1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/weights/Adam_1/read"
  op: "Identity"
  input: "gen/fc1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
}
node {
  name: "gen/fc1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/biases/Adam/Assign"
  op: "Assign"
  input: "gen/fc1/biases/Adam"
  input: "gen/fc1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/biases/Adam/read"
  op: "Identity"
  input: "gen/fc1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
}
node {
  name: "gen/fc1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/fc1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/fc1/biases/Adam_1/Assign"
  op: "Assign"
  input: "gen/fc1/biases/Adam_1"
  input: "gen/fc1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/fc1/biases/Adam_1/read"
  op: "Identity"
  input: "gen/fc1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "gen/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/weights/Adam/Assign"
  op: "Assign"
  input: "gen/convT1/weights/Adam"
  input: "gen/convT1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/weights/Adam/read"
  op: "Identity"
  input: "gen/convT1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/weights/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT1/weights/Adam_1"
  input: "gen/convT1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/weights/Adam_1/read"
  op: "Identity"
  input: "gen/convT1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
}
node {
  name: "gen/convT1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/biases/Adam/Assign"
  op: "Assign"
  input: "gen/convT1/biases/Adam"
  input: "gen/convT1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/biases/Adam/read"
  op: "Identity"
  input: "gen/convT1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
}
node {
  name: "gen/convT1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT1/biases/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT1/biases/Adam_1"
  input: "gen/convT1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT1/biases/Adam_1/read"
  op: "Identity"
  input: "gen/convT1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "gen/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/weights/Adam/Assign"
  op: "Assign"
  input: "gen/convT2/weights/Adam"
  input: "gen/convT2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/weights/Adam/read"
  op: "Identity"
  input: "gen/convT2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/weights/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT2/weights/Adam_1"
  input: "gen/convT2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/weights/Adam_1/read"
  op: "Identity"
  input: "gen/convT2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
}
node {
  name: "gen/convT2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/biases/Adam/Assign"
  op: "Assign"
  input: "gen/convT2/biases/Adam"
  input: "gen/convT2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/biases/Adam/read"
  op: "Identity"
  input: "gen/convT2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
}
node {
  name: "gen/convT2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT2/biases/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT2/biases/Adam_1"
  input: "gen/convT2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT2/biases/Adam_1/read"
  op: "Identity"
  input: "gen/convT2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "gen/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/weights/Adam/Assign"
  op: "Assign"
  input: "gen/convT3/weights/Adam"
  input: "gen/convT3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/weights/Adam/read"
  op: "Identity"
  input: "gen/convT3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/weights/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT3/weights/Adam_1"
  input: "gen/convT3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/weights/Adam_1/read"
  op: "Identity"
  input: "gen/convT3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
}
node {
  name: "gen/convT3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/biases/Adam/Assign"
  op: "Assign"
  input: "gen/convT3/biases/Adam"
  input: "gen/convT3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/biases/Adam/read"
  op: "Identity"
  input: "gen/convT3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
}
node {
  name: "gen/convT3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/convT3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/convT3/biases/Adam_1/Assign"
  op: "Assign"
  input: "gen/convT3/biases/Adam_1"
  input: "gen/convT3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/convT3/biases/Adam_1/read"
  op: "Identity"
  input: "gen/convT3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "gen/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "Adam_1/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_1/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_1/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam_1/update_gen/fc1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/fc1/weights"
  input: "gen/fc1/weights/Adam"
  input: "gen/fc1/weights/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/fc1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/fc1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/fc1/biases"
  input: "gen/fc1/biases/Adam"
  input: "gen/fc1/biases/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/fc1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT1/weights"
  input: "gen/convT1/weights/Adam"
  input: "gen/convT1/weights/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT1/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT1/biases"
  input: "gen/convT1/biases/Adam"
  input: "gen/convT1/biases/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT2/weights"
  input: "gen/convT2/weights/Adam"
  input: "gen/convT2/weights/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT2/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT2/biases"
  input: "gen/convT2/biases/Adam"
  input: "gen/convT2/biases/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/BatchNorm_2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT3/weights"
  input: "gen/convT3/weights/Adam"
  input: "gen/convT3/weights/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT3/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/convT3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/convT3/biases"
  input: "gen/convT3/biases/Adam"
  input: "gen/convT3/biases/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/convT3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_gen/BatchNorm_3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/gen/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/mul"
  op: "Mul"
  input: "beta1_power_1/read"
  input: "Adam_1/beta1"
  input: "^Adam_1/update_gen/fc1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/fc1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_3/beta/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Adam_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "Adam_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/mul_1"
  op: "Mul"
  input: "beta2_power_1/read"
  input: "Adam_1/beta2"
  input: "^Adam_1/update_gen/fc1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/fc1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_3/beta/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Adam_1/Assign_1"
  op: "Assign"
  input: "beta2_power_1"
  input: "Adam_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1"
  op: "NoOp"
  input: "^Adam_1/update_gen/fc1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/fc1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT1/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT2/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/weights/ApplyAdam"
  input: "^Adam_1/update_gen/convT3/biases/ApplyAdam"
  input: "^Adam_1/update_gen/BatchNorm_3/beta/ApplyAdam"
  input: "^Adam_1/Assign"
  input: "^Adam_1/Assign_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^gen/fc1/weights/Assign"
  input: "^gen/fc1/biases/Assign"
  input: "^gen/BatchNorm/beta/Assign"
  input: "^gen/BatchNorm/moving_mean/Assign"
  input: "^gen/BatchNorm/moving_variance/Assign"
  input: "^gen/convT1/weights/Assign"
  input: "^gen/convT1/biases/Assign"
  input: "^gen/BatchNorm_1/beta/Assign"
  input: "^gen/BatchNorm_1/moving_mean/Assign"
  input: "^gen/BatchNorm_1/moving_variance/Assign"
  input: "^gen/convT2/weights/Assign"
  input: "^gen/convT2/biases/Assign"
  input: "^gen/BatchNorm_2/beta/Assign"
  input: "^gen/BatchNorm_2/moving_mean/Assign"
  input: "^gen/BatchNorm_2/moving_variance/Assign"
  input: "^gen/convT3/weights/Assign"
  input: "^gen/convT3/biases/Assign"
  input: "^gen/BatchNorm_3/beta/Assign"
  input: "^gen/BatchNorm_3/moving_mean/Assign"
  input: "^gen/BatchNorm_3/moving_variance/Assign"
  input: "^disc/conv1/weights/Assign"
  input: "^disc/conv1/biases/Assign"
  input: "^disc/conv2/weights/Assign"
  input: "^disc/conv2/biases/Assign"
  input: "^disc/conv3/weights/Assign"
  input: "^disc/conv3/biases/Assign"
  input: "^disc/conv4/weights/Assign"
  input: "^disc/conv4/biases/Assign"
  input: "^disc/fc6/weights/Assign"
  input: "^disc/fc6/biases/Assign"
  input: "^disc/fc7/weights/Assign"
  input: "^disc/fc7/biases/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^disc/conv1/weights/Adam/Assign"
  input: "^disc/conv1/weights/Adam_1/Assign"
  input: "^disc/conv1/biases/Adam/Assign"
  input: "^disc/conv1/biases/Adam_1/Assign"
  input: "^disc/conv2/weights/Adam/Assign"
  input: "^disc/conv2/weights/Adam_1/Assign"
  input: "^disc/conv2/biases/Adam/Assign"
  input: "^disc/conv2/biases/Adam_1/Assign"
  input: "^disc/conv3/weights/Adam/Assign"
  input: "^disc/conv3/weights/Adam_1/Assign"
  input: "^disc/conv3/biases/Adam/Assign"
  input: "^disc/conv3/biases/Adam_1/Assign"
  input: "^disc/conv4/weights/Adam/Assign"
  input: "^disc/conv4/weights/Adam_1/Assign"
  input: "^disc/conv4/biases/Adam/Assign"
  input: "^disc/conv4/biases/Adam_1/Assign"
  input: "^disc/fc6/weights/Adam/Assign"
  input: "^disc/fc6/weights/Adam_1/Assign"
  input: "^disc/fc6/biases/Adam/Assign"
  input: "^disc/fc6/biases/Adam_1/Assign"
  input: "^disc/fc7/weights/Adam/Assign"
  input: "^disc/fc7/weights/Adam_1/Assign"
  input: "^disc/fc7/biases/Adam/Assign"
  input: "^disc/fc7/biases/Adam_1/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power_1/Assign"
  input: "^gen/fc1/weights/Adam/Assign"
  input: "^gen/fc1/weights/Adam_1/Assign"
  input: "^gen/fc1/biases/Adam/Assign"
  input: "^gen/fc1/biases/Adam_1/Assign"
  input: "^gen/BatchNorm/beta/Adam/Assign"
  input: "^gen/BatchNorm/beta/Adam_1/Assign"
  input: "^gen/convT1/weights/Adam/Assign"
  input: "^gen/convT1/weights/Adam_1/Assign"
  input: "^gen/convT1/biases/Adam/Assign"
  input: "^gen/convT1/biases/Adam_1/Assign"
  input: "^gen/BatchNorm_1/beta/Adam/Assign"
  input: "^gen/BatchNorm_1/beta/Adam_1/Assign"
  input: "^gen/convT2/weights/Adam/Assign"
  input: "^gen/convT2/weights/Adam_1/Assign"
  input: "^gen/convT2/biases/Adam/Assign"
  input: "^gen/convT2/biases/Adam_1/Assign"
  input: "^gen/BatchNorm_2/beta/Adam/Assign"
  input: "^gen/BatchNorm_2/beta/Adam_1/Assign"
  input: "^gen/convT3/weights/Adam/Assign"
  input: "^gen/convT3/weights/Adam_1/Assign"
  input: "^gen/convT3/biases/Adam/Assign"
  input: "^gen/convT3/biases/Adam_1/Assign"
  input: "^gen/BatchNorm_3/beta/Adam/Assign"
  input: "^gen/BatchNorm_3/beta/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "disc/conv1/biases"
        string_val: "disc/conv1/biases/Adam"
        string_val: "disc/conv1/biases/Adam_1"
        string_val: "disc/conv1/weights"
        string_val: "disc/conv1/weights/Adam"
        string_val: "disc/conv1/weights/Adam_1"
        string_val: "disc/conv2/biases"
        string_val: "disc/conv2/biases/Adam"
        string_val: "disc/conv2/biases/Adam_1"
        string_val: "disc/conv2/weights"
        string_val: "disc/conv2/weights/Adam"
        string_val: "disc/conv2/weights/Adam_1"
        string_val: "disc/conv3/biases"
        string_val: "disc/conv3/biases/Adam"
        string_val: "disc/conv3/biases/Adam_1"
        string_val: "disc/conv3/weights"
        string_val: "disc/conv3/weights/Adam"
        string_val: "disc/conv3/weights/Adam_1"
        string_val: "disc/conv4/biases"
        string_val: "disc/conv4/biases/Adam"
        string_val: "disc/conv4/biases/Adam_1"
        string_val: "disc/conv4/weights"
        string_val: "disc/conv4/weights/Adam"
        string_val: "disc/conv4/weights/Adam_1"
        string_val: "disc/fc6/biases"
        string_val: "disc/fc6/biases/Adam"
        string_val: "disc/fc6/biases/Adam_1"
        string_val: "disc/fc6/weights"
        string_val: "disc/fc6/weights/Adam"
        string_val: "disc/fc6/weights/Adam_1"
        string_val: "disc/fc7/biases"
        string_val: "disc/fc7/biases/Adam"
        string_val: "disc/fc7/biases/Adam_1"
        string_val: "disc/fc7/weights"
        string_val: "disc/fc7/weights/Adam"
        string_val: "disc/fc7/weights/Adam_1"
        string_val: "gen/BatchNorm/beta"
        string_val: "gen/BatchNorm/beta/Adam"
        string_val: "gen/BatchNorm/beta/Adam_1"
        string_val: "gen/BatchNorm/moving_mean"
        string_val: "gen/BatchNorm/moving_variance"
        string_val: "gen/BatchNorm_1/beta"
        string_val: "gen/BatchNorm_1/beta/Adam"
        string_val: "gen/BatchNorm_1/beta/Adam_1"
        string_val: "gen/BatchNorm_1/moving_mean"
        string_val: "gen/BatchNorm_1/moving_variance"
        string_val: "gen/BatchNorm_2/beta"
        string_val: "gen/BatchNorm_2/beta/Adam"
        string_val: "gen/BatchNorm_2/beta/Adam_1"
        string_val: "gen/BatchNorm_2/moving_mean"
        string_val: "gen/BatchNorm_2/moving_variance"
        string_val: "gen/BatchNorm_3/beta"
        string_val: "gen/BatchNorm_3/beta/Adam"
        string_val: "gen/BatchNorm_3/beta/Adam_1"
        string_val: "gen/BatchNorm_3/moving_mean"
        string_val: "gen/BatchNorm_3/moving_variance"
        string_val: "gen/convT1/biases"
        string_val: "gen/convT1/biases/Adam"
        string_val: "gen/convT1/biases/Adam_1"
        string_val: "gen/convT1/weights"
        string_val: "gen/convT1/weights/Adam"
        string_val: "gen/convT1/weights/Adam_1"
        string_val: "gen/convT2/biases"
        string_val: "gen/convT2/biases/Adam"
        string_val: "gen/convT2/biases/Adam_1"
        string_val: "gen/convT2/weights"
        string_val: "gen/convT2/weights/Adam"
        string_val: "gen/convT2/weights/Adam_1"
        string_val: "gen/convT3/biases"
        string_val: "gen/convT3/biases/Adam"
        string_val: "gen/convT3/biases/Adam_1"
        string_val: "gen/convT3/weights"
        string_val: "gen/convT3/weights/Adam"
        string_val: "gen/convT3/weights/Adam_1"
        string_val: "gen/fc1/biases"
        string_val: "gen/fc1/biases/Adam"
        string_val: "gen/fc1/biases/Adam_1"
        string_val: "gen/fc1/weights"
        string_val: "gen/fc1/weights/Adam"
        string_val: "gen/fc1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta1_power_1"
  input: "beta2_power"
  input: "beta2_power_1"
  input: "disc/conv1/biases"
  input: "disc/conv1/biases/Adam"
  input: "disc/conv1/biases/Adam_1"
  input: "disc/conv1/weights"
  input: "disc/conv1/weights/Adam"
  input: "disc/conv1/weights/Adam_1"
  input: "disc/conv2/biases"
  input: "disc/conv2/biases/Adam"
  input: "disc/conv2/biases/Adam_1"
  input: "disc/conv2/weights"
  input: "disc/conv2/weights/Adam"
  input: "disc/conv2/weights/Adam_1"
  input: "disc/conv3/biases"
  input: "disc/conv3/biases/Adam"
  input: "disc/conv3/biases/Adam_1"
  input: "disc/conv3/weights"
  input: "disc/conv3/weights/Adam"
  input: "disc/conv3/weights/Adam_1"
  input: "disc/conv4/biases"
  input: "disc/conv4/biases/Adam"
  input: "disc/conv4/biases/Adam_1"
  input: "disc/conv4/weights"
  input: "disc/conv4/weights/Adam"
  input: "disc/conv4/weights/Adam_1"
  input: "disc/fc6/biases"
  input: "disc/fc6/biases/Adam"
  input: "disc/fc6/biases/Adam_1"
  input: "disc/fc6/weights"
  input: "disc/fc6/weights/Adam"
  input: "disc/fc6/weights/Adam_1"
  input: "disc/fc7/biases"
  input: "disc/fc7/biases/Adam"
  input: "disc/fc7/biases/Adam_1"
  input: "disc/fc7/weights"
  input: "disc/fc7/weights/Adam"
  input: "disc/fc7/weights/Adam_1"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/moving_variance"
  input: "gen/convT1/biases"
  input: "gen/convT1/biases/Adam"
  input: "gen/convT1/biases/Adam_1"
  input: "gen/convT1/weights"
  input: "gen/convT1/weights/Adam"
  input: "gen/convT1/weights/Adam_1"
  input: "gen/convT2/biases"
  input: "gen/convT2/biases/Adam"
  input: "gen/convT2/biases/Adam_1"
  input: "gen/convT2/weights"
  input: "gen/convT2/weights/Adam"
  input: "gen/convT2/weights/Adam_1"
  input: "gen/convT3/biases"
  input: "gen/convT3/biases/Adam"
  input: "gen/convT3/biases/Adam_1"
  input: "gen/convT3/weights"
  input: "gen/convT3/weights/Adam"
  input: "gen/convT3/weights/Adam_1"
  input: "gen/fc1/biases"
  input: "gen/fc1/biases/Adam"
  input: "gen/fc1/biases/Adam_1"
  input: "gen/fc1/weights"
  input: "gen/fc1/weights/Adam"
  input: "gen/fc1/weights/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta1_power_1"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "beta2_power_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "disc/conv1/biases"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "disc/conv1/biases/Adam"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "disc/conv1/biases/Adam_1"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "disc/conv1/weights"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "disc/conv1/weights/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "disc/conv1/weights/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "disc/conv2/biases"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "disc/conv2/biases/Adam"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "disc/conv2/biases/Adam_1"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "disc/conv2/weights"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "disc/conv2/weights/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv2/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "disc/conv2/weights/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "disc/conv3/biases"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "disc/conv3/biases/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "disc/conv3/biases/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "disc/conv3/weights"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "disc/conv3/weights/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv3/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "disc/conv3/weights/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "disc/conv4/biases"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "disc/conv4/biases/Adam"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "disc/conv4/biases/Adam_1"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "disc/conv4/weights"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "disc/conv4/weights/Adam"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/conv4/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "disc/conv4/weights/Adam_1"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/conv4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "disc/fc6/biases"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "disc/fc6/biases/Adam"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "disc/fc6/biases/Adam_1"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "disc/fc6/weights"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "disc/fc6/weights/Adam"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc6/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "disc/fc6/weights/Adam_1"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "disc/fc7/biases"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "disc/fc7/biases/Adam"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "disc/fc7/biases/Adam_1"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "disc/fc7/weights"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "disc/fc7/weights/Adam"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "disc/fc7/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "disc/fc7/weights/Adam_1"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@disc/fc7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "gen/BatchNorm/beta"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "gen/BatchNorm/moving_mean"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "gen/BatchNorm/moving_variance"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "gen/BatchNorm_1/beta"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_mean"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_variance"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "gen/BatchNorm_2/beta"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_mean"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_variance"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "gen/BatchNorm_3/beta"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_3/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_3/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_mean"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_variance"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "gen/convT1/biases"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "gen/convT1/biases/Adam"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "gen/convT1/biases/Adam_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "gen/convT1/weights"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "gen/convT1/weights/Adam"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "gen/convT1/weights/Adam_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "gen/convT2/biases"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "gen/convT2/biases/Adam"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "gen/convT2/biases/Adam_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "gen/convT2/weights"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "gen/convT2/weights/Adam"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT2/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "gen/convT2/weights/Adam_1"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "gen/convT3/biases"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "gen/convT3/biases/Adam"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "gen/convT3/biases/Adam_1"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "gen/convT3/weights"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "gen/convT3/weights/Adam"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/convT3/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "gen/convT3/weights/Adam_1"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/convT3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "gen/fc1/biases"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "gen/fc1/biases/Adam"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "gen/fc1/biases/Adam_1"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "gen/fc1/weights"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "gen/fc1/weights/Adam"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gen/fc1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "gen/fc1/weights/Adam_1"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
}
versions {
  producer: 24
}
